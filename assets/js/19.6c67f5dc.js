(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{429:function(t,s,a){"use strict";a.r(s);var e=a(43),n=Object(e.a)({},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[a("code",[t._v("Element.classList")]),t._v(" 是一个只读属性，返回一个元素的类属性的实时"),a("code",[t._v("DOMTokenList")]),t._v(" 集合。")]),t._v(" "),a("div",{staticClass:"tip custom-block"},[a("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("DOMTokenList 一组空格分隔的标记。它和 JavaScript Array 对象一样，索引从 0 开始。DOMTokenList 总是区分大小写（case-sensitive）。")])]),t._v(" "),a("li",[a("p",[t._v("实时 在控制台通过add  remove修改的时候会导致浏览器 重排与重绘")])]),t._v(" "),a("li",[a("p",[t._v("className 获取或设置指定元素的class属性的值")])])])]),t._v(" "),a("p",[t._v("使用 "),a("code",[t._v("classList")]),t._v(" 是替代"),a("code",[t._v("element.className")]),t._v("作为空格分隔的字符串访问元素的类列表的一种方便的方法。")]),t._v(" "),a("div",{staticClass:"language-html extra-class"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("class")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("a b c"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("id")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("wrap"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v('\n\ndocument.querySelector(\'#wrap\').classList();\n\n// DOMTokenList ["a", "b", "c", value:"a b c"]\n')])])]),a("h2",{attrs:{id:"方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#方法","aria-hidden":"true"}},[t._v("#")]),t._v(" 方法")]),t._v(" "),a("ul",[a("li",[a("p",[a("code",[t._v("add(string,string,...)")]),t._v(" 添加指定的类值")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("remove(string, string)")]),t._v(" 删除指定的类值")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("item(number)")]),t._v(" 按集合中的索引返回类值")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("replace( oldClass, newClass )")]),t._v("  用一个新类替换已有类")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("contains( String )")]),t._v(" 检查元素的类属性中是否存在指定的类值")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("toggle ( String [, force] )")])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("当只有一个参数时：切换 class value; 即如果类存在，则删除它并返回false，如果不存在，则添加它并返回true。")])]),t._v(" "),a("li",[a("p",[t._v("当存在第二个参数时：如果第二个参数的计算结果为true，则添加指定的类值，如果计算结果为false，则删除它")])])])])])])},[],!1,null,null,null);s.default=n.exports}}]);