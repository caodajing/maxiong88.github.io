(window.webpackJsonp=window.webpackJsonp||[]).push([[41],{414:function(t,s,a){"use strict";a.r(s);var n=a(43),r=Object(n.a)({},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"parseint-string-radix"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#parseint-string-radix","aria-hidden":"true"}},[t._v("#")]),t._v(" ParseInt(string, radix)")]),t._v(" "),a("p",[t._v("parseInt() 函数可解析一个字符串，并返回一个整数。")]),t._v(" "),a("p",[t._v("string 要被解析的字符串。")]),t._v(" "),a("div",{staticClass:"tip custom-block"},[a("p",{staticClass:"custom-block-title"},[t._v("radix 转化的进制数")]),t._v(" "),a("p",[t._v("表示要解析的数字的基数。该值介于 2 ~ 36 之间。")]),t._v(" "),a("p",[t._v('当参数 radix 的值为 0，或没有设置该参数时，parseInt() 会根据 string 来判断数字的基数。\n如果字符串 string 以"0"开头, 基数是8（八进制）或者10（十进制），因此，永远都要明确给出radix参数的值。\n如果字符串 string 以其它任何值开头，则基数是10 (十进制)。\n如果字符串 string 以"0x"或者"0X"开头, 则基数是16 (16进制)。')]),t._v(" "),a("p",[t._v("如果该参数小于 2 或者大于 36，则 parseInt() 将返回 NaN。")])]),t._v(" "),a("p",[a("code",[t._v("这里有个进制的问题，不是科班出生不懂")])]),t._v(" "),a("h2",{attrs:{id:"array-prototype-map"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#array-prototype-map","aria-hidden":"true"}},[t._v("#")]),t._v(" Array.prototype.map()")]),t._v(" "),a("p",[t._v("array.map(function(currentValue, index,arr){}, thisValue)")]),t._v(" "),a("div",{staticClass:"tip custom-block"},[a("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),a("p",[t._v('currentValue 当前元素的值\nindex 当前元素的索引值\narr 当前元素属于的数组对象\nthisValue 对象作为该执行回调时使用，传递给函数，用作 "this" 的值。如果省略了 thisValue ，"this" 的值为 "undefined"')])]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("var parseInt "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" function"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("string, radix, obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" string + "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"-"')]),t._v(" + radix + "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"-"')]),t._v(" + obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1"')]),t._v(", "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2"')]),t._v(", "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"3"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(".map"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("parseInt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("//"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1-0-1,2,3"')]),t._v(", "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2-1-1,2,3"')]),t._v(", "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"3-2-1,2,3"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n//"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"-"')]),t._v(" + obj 导致obj调用toString"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("方法自动转换为了string,相当于连接符\n//第1次遍历：1 + "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"-"')]),t._v(" + 0 + "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"-"')]),t._v(" + "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("1,2,3"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1-0-1,2,3"')]),t._v("\n\n//toString"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("还有以下几种特殊情况\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("a:1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(","),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("b:2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(".toString"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("//"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"[object Object],[object Object]"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("1,2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(".toString"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("//"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1,2"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("1,2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(","),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("3,4"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(".toString"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("//"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1,2,3,4"')]),t._v("\n")])])]),a("h2",{attrs:{id:"进制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#进制","aria-hidden":"true"}},[t._v("#")]),t._v(" 进制")]),t._v(" "),a("p",[t._v("我们还需要了解进制数的相关知识：")]),t._v(" "),a("p",[t._v("二进制的定义：用0和1两个数码来表示的数。")]),t._v(" "),a("p",[t._v("三进制的定义：用0和1，2三个数码来表示的数......")]),t._v(" "),a("p",[t._v("十进制的定义：用0和1，2，3...9十个数码来表示的数。")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("//以2为基数，\nparseInt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1'")]),t._v(", 2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("//1\nparseInt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2'")]),t._v(", 2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("//NaN\nparseInt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'3'")]),t._v(", 2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("//NaN\nparseInt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'10'")]),t._v(",2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("//2\n//以3为基数，\nparseInt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1'")]),t._v(", 3"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("//1\nparseInt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2'")]),t._v(", 3"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("//2\nparseInt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'3'")]),t._v(", 3"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("//NaN\nparseInt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'10'")]),t._v(",3"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("//3\n//以4为基数，\nparseInt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1'")]),t._v(", 4"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("//1\nparseInt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2'")]),t._v(", 4"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("//2\nparseInt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'3'")]),t._v(", 4"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("//3\nparseInt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'4'")]),t._v(", 4"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("//NaN\nparseInt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'10'")]),t._v(",4"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("//4\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("\n\n//总结：\n我们可以这样理解，二进制里没有2，3，"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".9,三进制里没有3，4"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".9,四进制里没有4，5"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".9\n即当string无法转成radix基数时会返回NaN\n")])])]),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1'")]),t._v(","),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2'")]),t._v(","),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'3'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(".map"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("parseInt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n//  parseInt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1'")]),t._v(", 0"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" -"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" 1   //radix"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("0,以10为基数解析 1*10^1+0*10^0"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("10\n//  parseInt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2'")]),t._v(", 1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" -"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" NaN //radix"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("1"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("2,返回NaN\n//  parseInt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'3'")]),t._v(", 2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" -"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" NaN //3无法转成二进制\n\n//即遍历后结果为 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("1,NaN,NaN"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n")])])]),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("99")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("888")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("map")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("parseInt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("11")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("NaN")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("NaN")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("NaN")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("NaN")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("NaN")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("NaN")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("NaN")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("888")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),a("h2",{attrs:{id:"帮助"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#帮助","aria-hidden":"true"}},[t._v("#")]),t._v(" 帮助")]),t._v(" "),a("p",[t._v("!(https://juejin.im/post/5b7298de51882561126f0389)[https://juejin.im/post/5b7298de51882561126f0389]")])])},[],!1,null,null,null);s.default=r.exports}}]);