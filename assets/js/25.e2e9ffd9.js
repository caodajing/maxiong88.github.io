(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{434:function(t,s,a){"use strict";a.r(s);var n=a(43),r=Object(n.a)({},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"动态语言与闭包-closure"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#动态语言与闭包-closure","aria-hidden":"true"}},[t._v("#")]),t._v(" 动态语言与闭包(closure)")]),t._v(" "),a("p",[t._v("闭包成了编程语言的一个重要概念")]),t._v(" "),a("p",[t._v("几乎所有的知名动态语言(php、c)都支持闭包，javascript也不例外")]),t._v(" "),a("p",[t._v("一小段可重用的代码（一个可调用的函数）能够处理并可选地保留一个上下文。")]),t._v(" "),a("h3",{attrs:{id:"动态语言与动态类型语言"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#动态语言与动态类型语言","aria-hidden":"true"}},[t._v("#")]),t._v(" 动态语言与动态类型语言")]),t._v(" "),a("p",[a("code",[t._v("动态语言")]),t._v("指：程序在运行时可以改变其结构；新的函数可以被引进，已有的函数可以被删除等在结构上的变化。")]),t._v(" "),a("p",[t._v("动态类型语言是指在运行期间才去发现数据类型的语言，++说的是数据类型++")]),t._v(" "),a("p",[t._v("动态语言说的是运行是改变结构，++说的是代码结构++。")]),t._v(" "),a("div",{staticClass:"tip custom-block"},[a("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),a("p",[t._v("大多数动态语言都是动态类型语言，但动态语言本身并不要求一定是动态类型的，而动态类型语言也不一定是动态语言")])]),t._v(" "),a("h3",{attrs:{id:"语法域和执行域"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#语法域和执行域","aria-hidden":"true"}},[t._v("#")]),t._v(" 语法域和执行域")]),t._v(" "),a("p",[t._v("语法域,指定义某个程序段落时的区域")]),t._v(" "),a("p",[t._v("执行域，指实际调用某个程序段落时所影响的区域")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("动态语言如js的函数不但能够访问语法域上的这些范围，还能访问它外层环境中的执行域范围\n\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 产生随机数函数")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("RandomAlert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" x "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Math"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("random")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("RandomAlert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 闭包的执行域随函数调用而创建")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" b "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("RandomAlert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("a")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("b")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 一般情况下，a与b得到的数值不同")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n")])])]),a("h3",{attrs:{id:"js闭包"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#js闭包","aria-hidden":"true"}},[t._v("#")]),t._v(" js闭包")]),t._v(" "),a("p",[t._v("在程序语言中，闭包，指语法域位于某个特定的区域，具有持续参照位于该区域内自身范围之外的执行域上的非持久型变量值能力的段落。这些外部执行域的非持久型变量神奇地保留它们在闭包最初定义时的值")]),t._v(" "),a("p",[t._v("从上可以看出，闭包通常是在动态语言中才有的概念，它是某些可以访问外部执行域的段落。")]),t._v(" "),a("p",[t._v("js中的闭包，是通过定义在函数体内部的"),a("code",[t._v("function")]),t._v("来实现")]),t._v(" "),a("p",[t._v("1.2中就是典型的闭包应用，RandomAlert函数的返回值是一个闭包，\na(), b() 分别访问了 闭包 两次被创建时 对应的外层RandomAlert()函数的执行域 上的局部变量x的值")]),t._v(" "),a("p",[t._v("闭包跟函数关系，类似与一种动态和静态、结构和实例的关系")]),t._v(" "),a("h3",{attrs:{id:"闭包的内在-自治的领域"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#闭包的内在-自治的领域","aria-hidden":"true"}},[t._v("#")]),t._v(" 闭包的内在----自治的领域")]),t._v(" "),a("p",[t._v("闭包的 闭 是指闭包的内部环境对外部不可见，\n也就是说闭包具有控制外部域的能力但是又能防止\n外部域对闭包的反向控制。换句话，"),a("code",[t._v("闭包的领域是对外封闭的")]),t._v("。")]),t._v(" "),a("p",[t._v("此特点不用过多解释，因为js闭包是通过function实现的，\n所以它天然具有基本的函数特征，在闭包内声明的变量，\n闭包外的任何环境中都无法访问，除非闭包向外部环境提供了访问\n他们的接口。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("dwn")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tdocument"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("write")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n我们说匿名函数调用产生一个 "),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token string"}},[t._v("`瞬时`")])]),t._v(" 的闭包\n因此当调用结束后，私有变量无法访问，并且如果没有外部引用存在\n内部对象就会被销毁"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n而如果反回了函数，或者被全局引用，则 闭包 被保留了下来\n闭包中的内容被 有选择 "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("地开放出来")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 封闭的私有域 私有变量")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" unnerX "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("innerY "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 开放的公共域 全局变量")]),t._v("\n\touterObj "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("x "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" innerX"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" y "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" innerY"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("dwn")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("innerX"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 内部数据无法访问")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("catch")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ex"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("dwn")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'内部数据无法访问'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("dwn")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("outerObj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("X")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 通过外部接口访问")]),t._v("\n\n")])])]),a("h3",{attrs:{id:"访问外部环境"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#访问外部环境","aria-hidden":"true"}},[t._v("#")]),t._v(" 访问外部环境")]),t._v(" "),a("p",[t._v("闭包不但可以读外部变量，也可以写外部变量")]),t._v(" "),a("h2",{attrs:{id:"总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#总结","aria-hidden":"true"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),a("ul",[a("li",[t._v("我们定义的函数，不管返不返回、不管有没有引用自由变量、不管自由变量是全局的还是局部的，都是闭包。闭包有自治的领域")]),t._v(" "),a("li",[t._v("闭包不但可以读外部变量，也可以写外部变量")])])])},[],!1,null,null,null);s.default=r.exports}}]);