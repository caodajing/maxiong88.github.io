(window.webpackJsonp=window.webpackJsonp||[]).push([[29],{427:function(t,a,s){"use strict";s.r(a);var n=s(43),e=Object(n.a)({},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#函数","aria-hidden":"true"}},[t._v("#")]),t._v(" 函数")]),t._v(" "),s("p",[t._v("函数是由事件驱动的或者当它被调用时执行的可重复使用的代码块。")]),t._v(" "),s("h2",{attrs:{id:"构造函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#构造函数","aria-hidden":"true"}},[t._v("#")]),t._v(" 构造函数")]),t._v(" "),s("p",[t._v("需要使用new运算符初始化")]),t._v(" "),s("h2",{attrs:{id:"普通函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#普通函数","aria-hidden":"true"}},[t._v("#")]),t._v(" 普通函数")]),t._v(" "),s("p",[t._v("不适用new运算符的函数")]),t._v(" "),s("h2",{attrs:{id:"区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#区别","aria-hidden":"true"}},[t._v("#")]),t._v(" 区别")]),t._v(" "),s("ol",[s("li",[t._v("构造函数使用new运算符调用；普通函数不使用new运算符调用；")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" p "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Person")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" p1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Persion1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("2.构造函数内部可以使用this关键字；普通函数内部不建议使用this，因为这时候this指向的是window全局对象，这样无意间就会为window添加了一些全局变量或函数")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("2.1 在构造函数内部，this指向的是构造出来的新对象\n\n2.2 在普通函数内部，this指向的是window全局对象\n")])])]),s("p",[t._v("3.构造函数默认不用return返回值；普通函数一般都有return返回值")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("3.1 构造函数会默认返回this，也就是新的实例对象\n\n3.2 普通函数如果没有return值的话，返回undefined\n\n3.3 如果使用了return，那返回值会根据return值的类型而有所不同\n3.3.1 return的是五种简单数据类型：String,Number,Boolean,Null,Undefined的话，构造函数会忽略return的值，依然返回this对象；而普通函数会返回return后面的值\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" Otaku "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("name, age"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    this.strength "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" 60"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    this.age "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" age"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'handsome boy'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\nvar person "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" new Otaku"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Kevin'")]),t._v(", "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'18'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nconsole.log"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("person.name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" // undefined\nconsole.log"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("person.habit"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" // undefined\nconsole.log"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("person.strength"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" // 60\nconsole.log"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("person.age"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" // 18\n\n\n3.3.2 如果return的是引用类型：Array,Date,Object,Function,RegExp,Error的话，构造函数和普通函数都会返回return后面的值\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" Otaku "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("name, age"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    this.strength "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" 60"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    this.age "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" age"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        name: name,\n        habit: "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Games'")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\nvar person "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" new Otaku"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Kevin'")]),t._v(", "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'18'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nconsole.log"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("person.name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" // Kevin\nconsole.log"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("person.habit"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" // Games\nconsole.log"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("person.strength"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" // undefined\nconsole.log"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("person.age"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" // undefined\n\n\n")])])]),s("p",[t._v("4.构造函数首字母建议大写；普通函数首字母建议小写")]),t._v(" "),s("h3",{attrs:{id:"课外"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#课外","aria-hidden":"true"}},[t._v("#")]),t._v(" 课外")]),t._v(" "),s("p",[t._v("new 做了什么")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("var obj "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" 创建一个空对象obj\n\nobj.__proto__ "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" co.prototype 将这个空对象的__proto__成员指向了构造函数对象的prototype成员对象\n\nco.call"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" 将构造函数的作用域赋给新对象，因此co对象中的this指向了新对象obj，然后再调用co函数。\n\n返回新对象 如果构造函数返回简单数据类型则返回新对象是obj、否则就是构造函数的返回值\n")])])]),s("p",[t._v("我都到一篇文章 用了一个很通俗易懂的 方法解释的，")]),t._v(" "),s("p",[t._v("js 给java打了一个电话告诉了它的住址让他过来吃饭，java就知道了js地址，java到了js家里不管怎么改动家里的布局，js、java都在js的家里面")]),t._v(" "),s("p",[t._v("引用类型的赋值其实是对象保存在栈区地址指针的赋值，所以两个变量指向同一个对象，任何的操作都会互相影响.")]),t._v(" "),s("p",[t._v("参考资料")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://segmentfault.com/a/1190000008615288",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://segmentfault.com/a/1190000008615288"),s("OutboundLink")],1)])])},[],!1,null,null,null);a.default=e.exports}}]);